<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.chenlijia1111</groupId>
    <artifactId>utils</artifactId>
    <version>1.2.1-SNAPSHOT</version>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <name>utils</name>
    <description>工具类</description>
    <url>https://github.com/chenlijia1111/utils.git</url>


    <properties>
        <java.version>1.8</java.version>
        <skipTests>true</skipTests>
        <httpclient.version>4.5.13</httpclient.version>
        <jackson-databind.version>2.9.10.8</jackson-databind.version>
        <!--poi 的版本不要搞随便改，改了可能某个方法就没有了 poi 版本之间有时候变动会很大，
        导出数据字典的工具类用的就是这个版本-->
        <poi.version>4.0.1</poi.version>
        <fr.opensagres.xdocreport.version>2.0.2</fr.opensagres.xdocreport.version>
        <joda-time.version>2.9.9</joda-time.version>
        <javax.servlet-api.version>4.0.1</javax.servlet-api.version>
        <slf4j-api.version>1.7.25</slf4j-api.version>
        <bcprov-jdk15on.version>1.67</bcprov-jdk15on.version>
        <junit.version>4.12</junit.version>
        <quartz.version>2.3.1</quartz.version>
        <javax.mail.version>1.6.2</javax.mail.version>
        <jjwt.version>0.9.1</jjwt.version>
        <alipay-sdk-java.version>3.7.110.ALL</alipay-sdk-java.version>
        <zxing.javase.version>3.3.3</zxing.javase.version>
        <pinyin4j.version>2.5.1</pinyin4j.version>
        <swagger-annotations.version>1.5.23</swagger-annotations.version>
        <mybatis-generator-core.version>1.4.0</mybatis-generator-core.version>
        <mysql-connector-java.version>8.0.17</mysql-connector-java.version>
        <freemarker.version>2.3.28</freemarker.version>
        <javax.persistence-api.version>2.2</javax.persistence-api.version>
        <thumbnailator.version>0.4.8</thumbnailator.version>
        <jsoup.version>1.14.2</jsoup.version>
        <spring-boot-starter-aop.version>2.2.2.RELEASE</spring-boot-starter-aop.version>
        <mybatis.version>3.5.3</mybatis.version>
        <tk.mybatis.version>4.1.5</tk.mybatis.version>
        <spring-web.version>5.2.0.RELEASE</spring-web.version>
        <io.netty.version>4.1.48.Final</io.netty.version>
    </properties>

    <!--只对常用应用做显示引用,其他如office操作,支付宝支付等都需要自行引入依赖,以免加载大量不需要的jar-->
    <dependencies>
        <!-- http 请求封装 -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${httpclient.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
            <version>${httpclient.version}</version>
            <scope>compile</scope>
        </dependency>
        <!-- json 序列化 -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson-databind.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- office 处理工具 -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-scratchpad</artifactId>
            <version>${poi.version}</version>
            <scope>provided</scope>
        </dependency>
        <!--xdocreport 对word的处理 转化操作等-->
        <dependency>
            <groupId>fr.opensagres.xdocreport</groupId>
            <artifactId>fr.opensagres.xdocreport.document</artifactId>
            <version>${fr.opensagres.xdocreport.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/fr.opensagres.xdocreport/fr.opensagres.xdocreport.converter.docx.xwpf -->
        <!-- 对docx的处理 -->
        <dependency>
            <groupId>fr.opensagres.xdocreport</groupId>
            <artifactId>fr.opensagres.xdocreport.converter.docx.xwpf</artifactId>
            <version>${fr.opensagres.xdocreport.version}</version>
            <scope>provided</scope>
        </dependency>
        <!--poi-->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>${poi.version}</version>
            <scope>provided</scope>
        </dependency>
        <!--时间工具-->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${joda-time.version}</version>
            <scope>compile</scope>
        </dependency>
        <!-- servlet api 依赖于具体环境 必须要一起打包走 只需要调用方有这个包就行了-->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${javax.servlet-api.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- log 日志门面类  调用者搭配log-back进行使用 -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j-api.version}</version>
        </dependency>
        <!-- AES AES/CBC/PKCS7Padding 支持 -->
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk15on</artifactId>
            <version>${bcprov-jdk15on.version}</version>
            <scope>provided</scope>
        </dependency>
        <!--单元测试-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- quartz 定时器框架 -->
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>${quartz.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- 邮件 -->
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>javax.mail</artifactId>
            <version>${javax.mail.version}</version>
            <scope>compile</scope>
        </dependency>
        <!-- jwt -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>${jjwt.version}</version>
            <scope>provided</scope>
            <!--防止json版本冲突-->
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--支付宝支付-->
        <dependency>
            <groupId>com.alipay.sdk</groupId>
            <artifactId>alipay-sdk-java</artifactId>
            <version>${alipay-sdk-java.version}</version>
            <scope>provided</scope>
        </dependency>
        <!--二维码工具类-->
        <dependency>
            <groupId>com.google.zxing</groupId>
            <artifactId>javase</artifactId>
            <version>${zxing.javase.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- 汉语拼音工具 -->
        <dependency>
            <groupId>com.belerweb</groupId>
            <artifactId>pinyin4j</artifactId>
            <version>${pinyin4j.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- swagger 注解 用于生成代码 -->
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${swagger-annotations.version}</version>
            <scope>provided</scope>
        </dependency>
        <!--用于代码生成 mybatis 调用者需要保持版本一致，不然可能会导致生成的代码有问题-->
        <dependency>
            <groupId>org.mybatis.generator</groupId>
            <artifactId>mybatis-generator-core</artifactId>
            <version>${mybatis-generator-core.version}</version>
            <scope>provided</scope>
        </dependency>
        <!--mysql-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql-connector-java.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- freemarker 模板生成-->
        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
            <version>${freemarker.version}</version>
            <scope>provided</scope>
        </dependency>
        <!--java jpa 持久层规范 里面包含了jpa的注解
        这里主要用于生成代码 调用者如果需要需要加上这个依赖,或者直接依赖 holdTarget jpa-->
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>javax.persistence-api</artifactId>
            <version>${javax.persistence-api.version}</version>
            <scope>provided</scope>
        </dependency>
        <!--图片压缩工具-->
        <dependency>
            <groupId>net.coobird</groupId>
            <artifactId>thumbnailator</artifactId>
            <version>${thumbnailator.version}</version>
            <scope>compile</scope>
        </dependency>
        <!-- springBoot AOP 动态代理 用做参数校验 不做显示引入,调用者有需要自行引入-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
            <version>${spring-boot-starter-aop.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- mybatis  不做显示引入,调用者有需要自行引入-->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>${mybatis.version}</version>
            <scope>provided</scope>
        </dependency>
        <!--通用mapper  不做显示引入,调用者有需要自行引入-->
        <dependency>
            <groupId>tk.mybatis</groupId>
            <artifactId>mapper</artifactId>
            <version>${tk.mybatis.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- holdTarget-web  不做显示引入,调用者有需要自行引入-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring-web.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- jsoup 网络处理 爬虫 html处理 -->
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>${jsoup.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/io.netty/netty-all -->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
            <version>${io.netty.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-compress apache 解压工具-->
        <!-- 一般 springBoot 项目都会带这个包，所以一般不用特意引入-->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>1.21</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>


    <parent>
        <groupId>org.sonatype.oss</groupId>
        <artifactId>oss-parent</artifactId>
        <version>7</version>
    </parent>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <scm>
        <tag>master</tag>
        <url>git@github.com:cloudnil/marathon-client.git</url>
        <connection>scm:git:git@github.com:chenlijia1111/utils.git</connection>
        <developerConnection>scm:git:git@github.com:chenlijia1111</developerConnection>
    </scm>
    <developers>
        <developer>
            <name>chenlijia</name>
            <email>571740367@qq.com</email>
            <organization>chenlijia</organization>
        </developer>
    </developers>

    <distributionManagement>
        <!--要上传到的中央仓库-->
        <repository>
            <id>releases</id>
            <name>Nexus Release Repository</name>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
        </repository>
        <!--要上传到的临时仓库-->
        <snapshotRepository>
            <id>snapshots</id>
            <name>Sonatype Nexus Snapshots</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <!-- 配置阿里云中央仓库下载 国内加快下载速度 -->
    <repositories>
        <repository>
            <id>maven-ali</id>
            <url>https://maven.aliyun.com/repository/public/</url>
        </repository>
        <!--下载快照版本-->
        <repository>
            <id>snapshots</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>
    </repositories>
</project>
